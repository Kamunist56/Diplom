unit cPolis;

interface
 uses cSmallTables, fdm;
Type
  Tpolis = Class
    id: integer;
    PolisType:TSmallTables;
    PolisNumber: String;

    procedure Get(Find_id: integer);
    procedure new(Polis: Tpolis);
    procedure Change(Polis: Tpolis);
    procedure Del(Find_id: integer);
    constructor Create;
    destructor Destroy;
  End;

implementation

{ Tpolis }

procedure Tpolis.Change(Polis: Tpolis);
begin
  with dm.QPolis do
  begin
    Close;
    Sql.Add('update Polis set polis_type=:polis_type, number=:number where id=:id');
    Parameters.ParamValues['polis_type'] := PolisType.id;
    Parameters.ParamValues['number'] := PolisNumber;
    Parameters.ParamValues['id'] := Polis.id;
    ExecSQl;
  end;
end;

constructor Tpolis.Create;
begin
  PolisType:=TSmallTables.Create;
end;

procedure Tpolis.Del(Find_id: integer);
begin
  with dm.QPolis do
  begin
    Close;
    Sql.Add('delete Polis where id=:id');
    Parameters.ParamValues['id'] := Find_id;
    ExecSQl;
  end;
end;

destructor Tpolis.Destroy;
begin
  PolisType.Destroy;
  inherited;
end;

procedure Tpolis.Get(Find_id: integer);
begin
  with dm.QPolis do
  begin
    Close;
    Sql.Add('select polis_type, number from Polis where id=:id');
    Parameters.ParamValues['id'] := Find_id;
    Open;
  end;
//  PolisType := TSmallTables.Create;
  PolisType.GetAtr(dm.QPolis.FieldByName('polis_type').AsInteger, 'Polis_type');
  PolisNumber := dm.QPolis.FieldByName('number').AsString;
  id := Find_id;
end;


procedure Tpolis.new(Polis: Tpolis);
begin
  with dm.QPolis do
  begin
    Close;
    Sql.Add('insert Polis(polis_type, number) values(:polis_type, :number)');
    Parameters.ParamValues['polis_type'] := PolisType.id;
    Parameters.ParamValues['number'] := PolisNumber;
    ExecSQl;
  end;
end;

end.
